apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    def variants = android.hasProperty('applicationVariants') \
        ? android.applicationVariants \
        : android.libraryVariants

    source = variants.release.javaCompile.source
    classpath = files(variants.release.javaCompile.classpath.files, android.bootClasspath)

    options.links("https://docs.oracle.com/javase/7/docs/api/");
    options.linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference");
    exclude '**/BuildConfig.java'
    exclude '**/R.java'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Maven
install {
    repositories.mavenInstaller {
        pom.project {
            packaging project.hasProperty('vinli.packaging') \
                ? project.property('vinli.packaging') \
                : 'aar'
            groupId project.property('vinli.groupId')
            artifactId project.property('vinli.artifactId')
            version project.property('vinli.version')

            name project.property('vinli.name')
            description project.property('vinli.desc')
            url "https://github.com/vinli/${project.property('vinli.githubRepo')}"

            scm {
                url "https://github.com/vinli/${project.property('vinli.githubRepo')}"
                connection "scm:git:git://github.com/vinli/${project.property('vinli.githubRepo')}.git"
                developerConnection "scm:git:ssh://git@github.com/vinli/${project.property('vinli.githubRepo')}.git"
                tag project.property('vinli.version')
            }

            issueManagement {
                system 'GitHub Issues'
                url "https://github.com/vinli/${project.property('vinli.githubRepo')}/issues"
            }

            licenses {
                license {
                    name 'MIT'
                    url 'http://opensource.org/licenses/MIT'
                }
            }

            organization {
                name 'Vinli, Inc.'
                url 'https://vin.li'
            }

            developers {
                developer {
                    id 'kturney'
                    name 'Kyle Turney'
                }
                developer {
                    id 'cmc5788'
                    name 'Christopher Casey'
                }
            }
        }
    }
}

uploadArchives {
    repositories.mavenDeployer {
        pom.artifactId = project.property('vinli.artifactId')
    }
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apiKey')

    configurations = ['archives']

    dryRun = project.hasProperty('vinli.dryRun') \
            ? project.property('vinli.dryRun') \
            : false
    publish = project.hasProperty('vinli.publish') \
            ? project.property('vinli.publish') \
            : false

    pkg {
        repo = project.property('vinli.groupId')
        name = project.property('vinli.artifactId')
        userOrg = 'vinli'
        desc = project.property('vinli.desc')
        websiteUrl = "https://github.com/vinli/${project.property('vinli.githubRepo')}"
        vcsUrl = "git://github.com/vinli/${project.property('vinli.githubRepo')}.git"
        issueTrackerUrl = "https://github.com/vinli/${project.property('vinli.githubRepo')}/issues"
        licenses = ['MIT']
        labels = ['android', 'vinli']
        publicDownloadNumbers = project.hasProperty('vinli.publicDownloadNumbers') \
            ? project.property('vinli.publicDownloadNumbers') \
            : false
        version {
            name = project.property('vinli.version')
            vcsTag = project.property('vinli.version')
            released = new Date()
        }
    }
}
